from bs4 import BeautifulSoup
import os

def get_hanzi_stroke_svgs(word: str) -> list[str]:
    """
    For a given Chinese word, return a list of stroke SVG filenames
    in the format generated by Make Me A Hanzi: 'XXXXX-still.svg'
    """
    return [f"{ord(char)}-still.svg" for char in word]

def generate_latex_stroke_sequence(char_label: str, output_dir: str) -> str:
    steps = []
    png_dir = os.path.join(output_dir, "pngs")
    for i in range(1, 30):
        step_path = os.path.join(png_dir, f"{char_label}_step_{i:02d}.png")
        if not os.path.exists(step_path):
            break
        steps.append(rf"\includegraphics[width=0.12\linewidth]{{pngs/{char_label}_step_{i:02d}.png}}")
    return "\n".join(steps)

from bs4 import BeautifulSoup
import os
import subprocess

from bs4 import BeautifulSoup
import os
import subprocess

from bs4 import BeautifulSoup
from copy import deepcopy
import os
import subprocess

def generate_stroke_step_pngs(svg_path: str, output_prefix: str, output_dir: str):
    png_dir = os.path.abspath(os.path.join(output_dir, "pngs"))
    os.makedirs(png_dir, exist_ok=True)

    # Read and parse SVG
    with open(svg_path, "r", encoding="utf-8") as f:
        soup = BeautifulSoup(f, "xml")

    # Remove all stroke number labels (text)
    for text in soup.find_all("text"):
        text.decompose()

    # Remove mirrored transforms (scale(-1,...))
    for g in soup.find_all("g"):
        if g.has_attr("transform") and "scale(-1" in g["transform"]:
            del g["transform"]

    all_strokes = soup.find_all("path")

    # Build gray background strokes (full character)
    gray_paths = []
    for path in all_strokes:
        gray = deepcopy(path)
        gray.attrs = {}
        gray["style"] = "fill:none;stroke:#CCCCCC;stroke-width:3"
        gray_paths.append(gray)

    for i in range(1, len(all_strokes) + 1):
        step_svg_path = os.path.join(png_dir, f"{output_prefix}_step_{i:02d}.svg")
        step_png_path = os.path.join(png_dir, f"{output_prefix}_step_{i:02d}.png")

        if os.path.exists(step_png_path):
            continue  # Already generated

        # New clean SVG document
        step_soup = BeautifulSoup(
            '<svg xmlns="http://www.w3.org/2000/svg" width="109" height="109" viewBox="0 0 109 109"></svg>',
            "xml"
        )
        svg_root = step_soup.svg

        # Add gray background strokes
        for gp in gray_paths:
            svg_root.append(deepcopy(gp))

        # Add strokes up to step i
        for j in range(i):
            stroke = deepcopy(all_strokes[j])
            stroke.attrs = {}
            stroke["style"] = "fill:none;stroke:#000000;stroke-width:3"
            svg_root.append(stroke)

        # Write SVG
        with open(step_svg_path, "w", encoding="utf-8") as out_svg:
            out_svg.write(str(step_soup))

        # Convert to PNG
        subprocess.run([
            "inkscape",
            step_svg_path,
            "--export-type=png",
            "--export-area-drawing",
            "--export-width=300",
            f"--export-filename={step_png_path}"
        ], check=True)

        print(f"âœ… Created: {step_png_path}")